[tool.poetry]
name = "parsita"
version = "1.8.0"
description = "Parser combinator library for Python"
authors = ["David Hagen <david@drhagen.com>"]
license = "MIT"
readme = "README.md"
documentation = "https://parsita.drhagen.com"
repository = "https://github.com/drhagen/parsita"
keywords = ["text", "parsing", "parser",  "combinator"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
]


[tool.poetry.dependencies]
python = "^3.7.0"
returns = "^0.19.0"
deprecated = "^1.2"

[tool.poetry.dev-dependencies]
nox_poetry = "^1.0.2"

# Test
pytest = "^7.2"
coverage = { version = "^6.5", extras = ["toml"] }
pytest-cov = "*"
pytest-timeout = "*"

# Black
black = ">=22.10"

# Isort
isort = "^5.10"

# Lint
flake8 = "^3.9"
pep8-naming = "*"
flake8-noqa = "*"
flake8-bugbear = "*"
flake8-broken-line = "*"
flake8-comprehensions = "*"
flake8-pyproject = "*"

# Docs
mkdocs-material = "^8.5"


[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
]

[tool.coverage.paths]
source = [
    "src/",
    ".nox/test*/lib/python*/site-packages/",
    ".nox/test*/Lib/site-packages/",
]


[tool.black]
line-length = 120


[tool.isort]
profile = "black"
line_length = 120


[tool.flake8]
max-line-length = 120
noqa-require-code = true
# F821: undefined-name; Parsita triggers this, but code coverage will catch it
# E203: whitespace-before-colon; Black formats it this way
# N805: first-argument-self; Parsita tests and examples define functions in class bodies
extend-ignore = ["F821", "E203", "N805"]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
