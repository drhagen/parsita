[tool.poetry]
name = "parsita"
version = "2.2.1"
description = "Parser combinator library for Python"
authors = ["David Hagen <david@drhagen.com>"]
license = "MIT"
readme = "README.md"
documentation = "https://parsita.drhagen.com"
repository = "https://github.com/drhagen/parsita"
keywords = ["text", "parsing", "parser", "combinator"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
]


[tool.poetry.dependencies]
python = "^3.9"
returns = "^0.20|^0.21|^0.22|^0.23"

[tool.poetry.dev-dependencies]
nox_poetry = "^1.0.3"

# Test
pytest = "^8"
pytest-cov = "*"
pytest-timeout = "*"

# Lint
ruff = "^0.8"

# Type checking
mypy = "^1"

# Docs
mkdocs-material = "^9"


[tool.pytest.ini_options]
addopts = ["--strict-config", "--strict-markers"]
xfail_strict = true
filterwarnings = ["error"]


[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if TYPE_CHECKING",
    "@overload",
]

[tool.coverage.paths]
source = [
    "src/",
    ".nox/test*/lib/python*/site-packages/",
    ".nox/test*/Lib/site-packages/",
]


[tool.ruff]
src = ["src"]
line-length = 99

[tool.ruff.lint]
extend-select = [
    "I", # isort
    "N", # pep8-naming
    "RUF", # ruff
    "B", # flake8-bugbear
    "N", # flake8-broken-line
    "C4", # flake8-comprehensions
    "PIE", # flake8-pie
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "ERA", # flake8-eradicate
]
# F821: undefined-name; Parsita triggers this, but code coverage will catch it
# N805: invalid-first-argument-name-for-method; Parsita tests and examples define functions in class bodies
extend-ignore = ["F821", "N805"]
isort.combine-as-imports = true

[tool.ruff.lint.per-file-ignores]
# F401: unused-import; Allow unused imports in __init__.py files
"__init__.py" = ["F401"]


[tool.mypy]
strict = true
# name-defined; Parsita triggers this, but code coverage will catch it
disable_error_code = ["name-defined"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
