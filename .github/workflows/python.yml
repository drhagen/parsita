name: python

on: [push]

jobs:
  test:
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install Poetry
        run: pipx install poetry==1.2.0rc2
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry
      - name: Install environment
        run: poetry install
      - name: Test with nox
        run: poetry run nox -s test-${{ matrix.python-version }}
      - name: Store coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: .coverage.*
  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install Poetry
        run: pipx install poetry==1.2.0rc2
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: poetry
      - name: Install environment
        run: poetry install
      - name: Fetch coverage
        uses: actions/download-artifact@v3
        with:
          name: coverage
      - name: Combine coverage and generate report
        run: poetry run nox -s coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install Poetry
        run: pipx install poetry==1.2.0rc2
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: poetry
      - name: Install environment
        run: poetry install
      - name: Run code quality checks
        run: poetry run nox -s black isort lint
